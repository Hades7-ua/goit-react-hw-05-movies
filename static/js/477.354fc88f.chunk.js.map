{"version":3,"file":"static/js/477.354fc88f.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/MoviePage/MoviesPage.js","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const TrendingItem = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n`;\nexport const TrendingList = styled.li`\n  margin-top: 24px;\n  margin-bottom: 5px;\n  margin-left: 50px;\n  list-style: none;\n  color: black;\n  a {\n    text-decoration: none;\n    color: black;\n    &:hover {\n      color: #ff4500;\n    }\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: collumn;\n  list-style: none;\n  text-decoration: none;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n`;\n\nexport const TitleMovieList = styled.h2`\n  font-size: 18px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  TrendingList,\n  Image,\n  TitleMovieList,\n  TrendingItem,\n  MovieLink,\n} from './MoviesList.styled';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <TrendingItem>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <TrendingList key={id}>\n            <MovieLink>\n              {' '}\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Image\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                      : defaultImg\n                  }\n                  alt=\"poster\"\n                  width={250}\n                />\n                <TitleMovieList>{title}</TitleMovieList>\n              </Link>\n            </MovieLink>\n          </TrendingList>\n        );\n      })}\n    </TrendingItem>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  margin-bottom: 20px;\n\n  input {\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    margin-right: 10px;\n    flex-grow: 1;\n\n    &:focus {\n      outline: none;\n      border-color: #007bff;\n    }\n  }\n\n  button {\n    padding: 10px 20px;\n    background-color: #007bff;\n    color: #fff;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n\n    &:hover {\n      background-color: #0056b3;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { Form } from './SearchForm.styled'\n\nexport default function SearchForm({ onSearch }) {\n  const [search, setSearch] = useState('');\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSearch(search);\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Enter search movie..\"\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Search</button>\n    </Form>\n  );\n}\n","import SearchForm from 'components/SearchForm/SearchForm';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchSearchMovies } from '../../services/api';\nimport toast from 'react-hot-toast';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Spinner from 'components/Loader/Spinner';\n\nexport default function MoviesPage({ movieId }) {\n  const [search, setSearch] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n\n  const onSearch = query => {\n    setSearch({ query });\n  };\n  useEffect(() => {\n    const query = search.get('query');\n    if (!query) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        const response = await fetchSearchMovies(query);\n        setMovies(response.results);\n      } catch (error) {\n        toast.error('Sorry, no movies found');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [search]);\n\n  return (\n    <div>\n      {' '}\n      <SearchForm onSearch={onSearch} /> <MoviesList movies={movies} />\n      {isLoading && <Spinner />}\n    </div>\n  );\n}\n","import axios from 'axios';\nconst API_KEY = '46a0cf4d73079c81a4257338e6778956';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n"],"names":["TrendingItem","styled","_templateObject","_taggedTemplateLiteral","TrendingList","_templateObject2","MovieLink","Link","_templateObject3","Image","_templateObject4","TitleMovieList","_templateObject5","MoviesList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","poster_path","_jsxs","to","concat","state","from","src","alt","width","Form","SearchForm","onSearch","_useState","useState","_useState2","_slicedToArray","search","setSearch","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","MoviesPage","movieId","_useSearchParams","useSearchParams","_useSearchParams2","isLoading","setIsLoading","_useState3","_useState4","setMovies","useEffect","query","get","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchSearchMovies","sent","results","t0","toast","finish","stop","apply","arguments","Spinner","API_KEY","axios","fetchTrendMovies","abrupt","data","_callee2","_context2","_x","fetchMovieDetails","_ref3","_callee3","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}