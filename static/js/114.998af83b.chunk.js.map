{"version":3,"file":"static/js/114.998af83b.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/HomePage.styled.js","pages/Home/HomePage.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const TrendingItem = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n`;\nexport const TrendingList = styled.li`\n  margin-top: 24px;\n  margin-bottom: 5px;\n  margin-left: 50px;\n  list-style: none;\n  color: black;\n  a {\n    text-decoration: none;\n    color: black;\n    &:hover {\n      color: #ff4500;\n    }\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: collumn;\n  list-style: none;\n  text-decoration: none;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n`;\n\nexport const TitleMovieList = styled.h2`\n  font-size: 18px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  TrendingList,\n  Image,\n  TitleMovieList,\n  TrendingItem,\n  MovieLink,\n} from './MoviesList.styled';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <TrendingItem>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <TrendingList key={id}>\n            <MovieLink>\n              {' '}\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Image\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                      : defaultImg\n                  }\n                  alt=\"poster\"\n                  width={250}\n                />\n                <TitleMovieList>{title}</TitleMovieList>\n              </Link>\n            </MovieLink>\n          </TrendingList>\n        );\n      })}\n    </TrendingItem>\n  );\n}\n","import styled from 'styled-components';\n\nexport const HomePageContainer = styled.div`\n  background-color: #f7f7f7;\n  padding: 20px;\n  text-align: center;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n`;\n\nexport const TitleHomePage = styled.h1`\n  color: #333;\n  font-size: 28px;\n  margin-bottom: 20px;\n  &:hover {\n    color: #ff4500;\n  }\n`;\n","import { fetchTrendMovies } from 'services/api';\nimport { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { HomePageContainer, TitleHomePage } from '../Home/HomePage.styled';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Spinner from 'components/Loader/Spinner';\n\nexport default function HomePage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchMovies = async () => {\n      try {\n        const response = await fetchTrendMovies();\n        setMovies(response.results);\n      } catch (error) {\n        toast.error('Sorry, no movies found');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <HomePageContainer>\n      <TitleHomePage>Trending today</TitleHomePage>\n      <MoviesList movies={movies} />\n      {isLoading && <Spinner />}\n    </HomePageContainer>\n  );\n}\n","import axios from 'axios';\nconst API_KEY = '46a0cf4d73079c81a4257338e6778956';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n"],"names":["TrendingItem","styled","_templateObject","_taggedTemplateLiteral","TrendingList","_templateObject2","MovieLink","Link","_templateObject3","Image","_templateObject4","TitleMovieList","_templateObject5","MoviesList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","poster_path","_jsxs","to","concat","state","from","src","alt","width","HomePageContainer","TitleHomePage","HomePage","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","setMovies","useEffect","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchTrendMovies","sent","results","t0","toast","finish","stop","apply","arguments","Spinner","API_KEY","axios","abrupt","data","fetchSearchMovies","_callee2","query","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}